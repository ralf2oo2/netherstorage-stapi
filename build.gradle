//file:noinspection GroovyAssignabilityCheck
//file:noinspection GroovyUnusedAssignment
//file:noinspection ForeignDelegate
plugins {
	id 'maven-publish'
	id 'fabric-loom' version '1.10.5'
	id 'babric-loom-extension' version '1.10.1'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
}

loom.runs {
	register("secondClient") {
		client()
		programArgs(["--username", "Player2", "--uuid", "cb7afd42-6488-4bb9-9dd3-151aa66d7049"])
	}
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	// Used for the fabric toolchain in this project.
	maven {
		name = 'Babric'
		url = 'https://maven.glass-launcher.net/babric'
	}
	// Used for mappings.
	maven {
		name = 'Glass Releases'
		url = 'https://maven.glass-launcher.net/releases'
	}
	// Used for StationAPI and HowManyItems.
	maven {
		name = 'Glass Snapshots'
		url = 'https://maven.glass-launcher.net/snapshots'
	}
	// Used for a StationAPI dependency.
	maven {
		name = 'Froge'
		url 'https://maven.minecraftforge.net/'
	}
	// Used for projects that do not have a maven repository, but do have a GitHub repository with working build scripts.
	maven {
		name = 'Jitpack'
		url = 'https://jitpack.io'
	}
	// Used for another StationAPI dependency
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
	mavenCentral()
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.glasslauncher:biny:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	implementation "org.slf4j:slf4j-api:1.8.0-beta4"
	implementation 'org.apache.logging.log4j:log4j-slf4j18-impl:2.17.2'
	implementation(include("me.carleslc:Simple-Yaml:1.8.4") as Dependency)

	modImplementation "net.modificationstation:StationAPI:${project.stapi_version}"

	// Optional, but convenient mods for mod creators and users alike.
	modImplementation("net.glasslauncher.mods:ModMenu:${project.modmenu_version}") {
		transitive false
	}

	modImplementation("net.glasslauncher.mods:glass-networking:${project.glass_networking_version}") {
		transitive false
	}

	modImplementation("net.glasslauncher.mods:GlassConfigAPI:${project.gcapi_version}") {
		transitive false
	}

	modImplementation("net.glasslauncher.mods:AlwaysMoreItems:${project.alwaysmoreitems_version}") {
		transitive false
	}
	
	modImplementation("maven.modrinth:bh-creative:${project.bhcreative_version}-b1.7.3") {
		transitive false
	}
	
	modRuntimeOnly("maven.modrinth:fast-stapi-intro:2.0.0-b1.7.3") {
		transitive false
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	// Loom also requires J17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
